/*
  Implementation of the izhikevich neuron
*/
neuron izhikevich_neuron:

  state:
    v mV = -65mV # Membrane potential in mV
    u mV
    # TODO add new variable U_m with the type real
    # NESTML syntax for variables: variable_name real = initial_value
  end

  equations:
    # TODO Add 2 ODEs for the V_m und U_m.
    # You can use current buffer I directly in the ODE
    v' = (0.04 *v *v/mV + 5 * v + 140mV - u + I)/ms
     u' = (a*(b*v/mV -v))/ms
  end

  parameters:
    # Add 4 variables a,b,c, d of real type
    a real = 0.02
    b mV = 0.2mV
    c mV = -65.0mV
    d mV = 2mV
  end

  input:
    # TODO add current buffer named I
    # NESTML Syntax for current buffers: buffer_name <- current
    I <- current
    spikes nS <- spike
  end

  output: spike

  update:
    integrate_odes()
    # TODO: Implement threshold crossing check

    # use an if-conditional block. The NESTML syntax looks like:
    # if a >= b:
    #   a += b
    #   b = a
    #   emit_spike()
    # end

    if v >= 30.0mV:
      u += d
      v = c
    end

  end

end