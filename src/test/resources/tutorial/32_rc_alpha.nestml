/*
  A straight forward implementation of the RC circuit approach.
  Adds alpha shapes for synaptic currents.
*/
neuron rc_alpha:

  state:
    V_m mV =  E_L
    g_ex pA = 0pA
    g_ex' pA/ms = 0pA/ms
    refractory_counts integer = 0
  end

  equations:
    g_ex'' = -g_ex' / tau_syn
    g_ex' = g_ex' - ( g_ex / tau_syn )
    function I_syn pA = g_ex + currents + I_e
    V_m' = -(V_m - E_L)/tau_m  + I_syn/C_m
  end

  parameters:
    E_L   mV = -70mV
    C_m   pF = 250pF
    tau_m ms = 10ms
    tau_syn ms = 2.0ms

    function V_th mV = -55mV - E_L
    function V_reset mV = -70mV - E_L
    refractory_timeout ms = 2ms
    I_e pA = 0pA
  end

  internals:
    PSConInit_E 1/ms = e / tau_syn
  end

  input:
    spikes pA <- spike
    currents <- current
  end

  output: spike

  update:
    if refractory_counts == 0:
      integrate_odes()
      if V_m > V_th:
        V_m = V_reset
        emit_spike()
        refractory_counts = steps(refractory_timeout)
      end
    else:
      refractory_counts -= 1
    end

    g_ex' += PSConInit_E * spikes
  end

end
