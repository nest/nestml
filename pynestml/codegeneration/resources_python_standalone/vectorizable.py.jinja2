"""
vectorizable.py

This file is part of NEST.

Copyright (C) 2004 The NEST Initiative

NEST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

NEST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with NEST.  If not, see <http://www.gnu.org/licenses/>.

Generated from NESTML at time: 2022-04-23 15:27:22.533049
"""

from typing import List, Mapping

from abc import ABCMeta, abstractmethod
import numpy as np


class Vectorizable(metaclass=ABCMeta):
    r"""By inheriting from this class, its member elements become convertible to and from a one-dimensional array of floats.

    This supports the use of numeric integrators, like those from GSL or scipy.
    """
    def to_vector(self) -> List[float]:
      vars = [(k, v) for k, v in self.__dict__.items() if (not k.startswith('__')) and (not k.endswith('__'))]
      dim: int = len(vars)
      vals = np.empty(dim, dtype=float)
      for i, (var_name, value) in enumerate(vars):
        vals[i] = self.__dict__[var_name]
      return vals

    def from_vector(self, vals: List[float]) -> None:
      vars = [(k, v) for k, v in self.__dict__.items() if (not k.startswith('__')) and (not k.endswith('__'))]
      dim: int = len(vars)
      for i, (var_name, value) in enumerate(vars):
        self.__dict__[var_name] = vals[i]

    def name_to_vector_index(self) -> Mapping[str, int]:
      vars = [(k, v) for k, v in self.__dict__.items() if (not k.startswith('__')) and (not k.endswith('__'))]
      name_to_vector_index_: Mapping[str, int] = {}
      for i, (var_name, value) in enumerate(vars):
        name_to_vector_index_[var_name] = i
      return name_to_vector_index_

