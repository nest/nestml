{#
  Generates Python declaration
  @param ast ASTDeclaration
#}
{%- if tracing %}# generated by {{self._TemplateReference__context.name}}{% endif %}
{%- for variable in declarations.get_variables(ast) %}
{%-   if ast.has_size_parameter() %}
{{variable.get_symbol_name()}}: Sequence[{{declarations.print_variable_type(variable)}}] = P_.{{declarations.print_size_parameter(ast)}} * [None]
{%-     if ast.has_expression() %}
for i in range(0, get_{{declarations.print_size_parameter(ast)}}()):
  {{variable.get_symbol_name()}}[i] = {{printer.print(ast.getExpr())}}
{%-     endif %}
{%-   else %}
{%-     if ast.has_expression() %}
{{variable.get_symbol_name()}}: {{declarations.print_variable_type(variable)}} = {{printer.print(ast.get_expression())}}
{%-     else %}
{{variable.get_symbol_name()}}: {{declarations.print_variable_type(variable)}}
{%-     endif %}
{%-   endif %}
{%- endfor -%}
