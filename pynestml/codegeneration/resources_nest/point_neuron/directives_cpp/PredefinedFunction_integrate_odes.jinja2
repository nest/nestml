{#
  Generates code for integrate_odes() function call
  @param ast ASTFunctionCall
#}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{
    // start rendered code for integrate_odes({{ ", ".join(utils.integrate_odes_args_strs_from_function_call(ast)) }})
    // this is inside its own block because it declares some temporary variables for the analytic solver

{%- if uses_analytic_solver %}
{%  set analytic_state_variables_ = analytic_state_variables.copy() %}

{%- if paired_synapse is defined %}
{%      set tmp = analytic_state_variables_.extend(analytic_state_variables_moved) %}
{%- endif %}

{%- if ast.get_args() | length > 0 %}
{%-     set analytic_state_variables_ = utils.filter_variables_list(analytic_state_variables_, ast.get_args()) %}
{%- endif %}

{%- if analytic_state_variables_ | length > 0 %}
    // analytic solver: integrating state variables (first step): {% for variable_name in analytic_state_variables_ %}{{ variable_name }}, {% endfor %}
{%-     filter indent(4, True) -%}
{%-         include "directives_cpp/AnalyticIntegrationStep_begin.jinja2" %}
{%-     endfilter %}
{%- endif %}
{%- endif %}

{%- if uses_numeric_solver %}

{%      set numeric_state_variables_to_be_integrated = numeric_state_variables + purely_numeric_state_variables_moved %}
{%-     if ast.get_args() | length > 0 %}
{%-         set numeric_state_variables_to_be_integrated = utils.filter_variables_list(numeric_state_variables_to_be_integrated, ast.get_args()) %}
{%-     endif %}
{%-     if numeric_state_variables_to_be_integrated | length > 0 %}
    // numeric solver: integrating state variables: {% for variable_name in numeric_state_variables_to_be_integrated %}{{ variable_name }}, {% endfor %}
{%-         filter indent(4, True) -%}
{%-             include "directives_cpp/GSLIntegrationStep.jinja2" %}
{%-         endfilter %}
{%-     endif %}
{%- endif %}

{%- if uses_analytic_solver and  analytic_state_variables_ | length > 0 %}
    // analytic solver: integrating state variables (second step): {% for variable_name in analytic_state_variables_ %}{{ variable_name }}, {% endfor %}
{%-     filter indent(4, True) -%}
{%-         include "directives_cpp/AnalyticIntegrationStep_end.jinja2" %}
{%-     endfilter %}
{%- endif %}
}