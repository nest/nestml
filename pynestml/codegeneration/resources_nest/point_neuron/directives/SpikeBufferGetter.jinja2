{%- macro SpikeBufferGetter(is_value, is_in_struct) -%}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}

{%- if is_value %}
{%- set name = "spike_inputs_grid_sum_" %}
{%- set type = "double" %}
{%- else %}
{%- set name = "spike_inputs_" %}
{%- set type = "nest::RingBuffer" %}
{%-endif %}

inline std::vector< {{type}} >& get_{{name}}()
{
{%- if is_in_struct %}
    return {{name}};
{%- else %}
    return B_.get_{{name}}();
{%- endif %}
}
{%- if is_in_struct %}
std::vector< {{type}} > {{name}};
{%- endif %}
{%- endmacro -%}
