{#/*
*  ModuleClassMaster.jinja2
*
*  This file is part of NEST.
*
*  Copyright (C) 2004 The NEST Initiative
*
*  NEST is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 2 of the License, or
*  (at your option) any later version.
*
*  NEST is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
*
*/#}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
/*
*  {{moduleName}}.cpp
*
*  This file is part of NEST.
*
*  Copyright (C) 2004 The NEST Initiative
*
*  NEST is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 2 of the License, or
*  (at your option) any later version.
*
*  NEST is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
*
*  {{now}}
*/

// Include from NEST
#include "nest_extension_interface.h"

// include headers with your own stuff

{% for neuron in neurons %}
#include "{{neuron.get_name()}}.h"
{% endfor %}
{% for synapse in synapses %}
#include "{{synapse.get_name()}}.h"
{% endfor %}

class {{moduleName}} : public nest::NESTExtensionInterface
{
  public:
    {{moduleName}}() {}
    ~{{moduleName}}() {}

    void initialize() override;
};

{{moduleName}} {{moduleName}}_LTX_module;

void {{moduleName}}::initialize()
{
{%- if neurons %}
    // register neurons
{%-   for neuron in neurons %}
    register_{{neuron.get_name()}}("{{neuron.get_name()}}");
{%-   endfor %}
{%- endif %}

{%- if synapses %}
    // register synapses
{%-   for synapse in synapses %}
    nest::register_{{synapse.get_name()}}( "{{synapse.get_name()}}" );
{%-   endfor %}
{%- endif %}
}