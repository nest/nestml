
/* Entry Point */
ENTRY (Reset_Handler)

MEMORY
{
    ITCM (rx):  ORIGIN = 0x00000000, LENGTH = 32K
    DTCM (rwx): ORIGIN = 0x00008000, LENGTH = 96K
}

_estack = ORIGIN (DTCM) + LENGTH (DTCM);

/* Generate a link error if heap and stack don't fit into RAM */
_Stack_Heap_Limit_Size = 4K;

/* Specify the memory areas */
SECTIONS
{
    . = ORIGIN (ITCM);

	/* The startup code goes first */
	.isr_vector :
	{
		. = ALIGN (4);
		KEEP (*( .isr_vector )) /* Startup code */
		. = ALIGN (4);
	} >ITCM
	.text :
	{
		. = ALIGN (4);
		*( .text )            /* .text sections (code) */
		*( .text* )           /* .text* sections (code) */
		*( .rodata )          /* .rodata sections (constants, strings, etc. ) */
		*( .rodata* )         /* .rodata* sections (constants, strings, etc. ) */
		*( .glue_7 )          /* glue arm to thumb code */
		*( .glue_7t )         /* glue thumb to arm code */

		. = ALIGN (4);
	} >ITCM
    PROVIDE ( __etext = . );

    .ARM.extab :
    {
        *( .ARM.extab* .gnu.linkonce.armextab.* )
    } >ITCM

    .ARM :
    {
        PROVIDE_HIDDEN ( __exidx_start = . );
        *( .ARM.exidx* .gnu.linkonce.armexidx.* )
        PROVIDE_HIDDEN ( __exidx_end = . );

    } >ITCM


	.preinit_array     :
	{
		PROVIDE_HIDDEN ( __preinit_array_start = . );
		KEEP ( *( .preinit_array* ) )
		PROVIDE_HIDDEN ( __preinit_array_end = . );
	} >ITCM
	.init_array :
	{
		PROVIDE_HIDDEN ( __init_array_start = . );
		KEEP ( *( SORT (.init_array.* ) ) )
		KEEP ( *( .init_array* ) )
		PROVIDE_HIDDEN ( __init_array_end = . );
	} >ITCM
	.fini_array :
	{
		PROVIDE_HIDDEN ( __fini_array_start = . );
		KEEP ( *( .fini_array* ) )
		KEEP ( *( SORT (.fini_array.* ) ) )
		PROVIDE_HIDDEN ( __fini_array_end = . );
	} >ITCM

    .ctors :
    {

        KEEP ( *crtbegin.o (.ctors) )
        KEEP ( *crtbegin?.o (.ctors) )
        KEEP ( *( EXCLUDE_FILE ( *crtend.o *crtend?.o ) .ctors) )
        KEEP ( *( SORT ( .ctors.* ) ) )
        KEEP ( *( .ctors ) )
    } >ITCM
    .dtors :
    {
        KEEP ( *crtbegin.o( .dtors ) )
        KEEP ( *crtbegin?.o( .dtors ) )
        KEEP ( *( EXCLUDE_FILE ( *crtend.o *crtend?.o ) .dtors ) )
        KEEP ( *( SORT (.dtors.* ) ) )
        KEEP ( *( .dtors ) )
    } >ITCM


    . = ALIGN (4);
	_sidata = .;
    PROVIDE ( _sidata = . );

    /* used by the startup to initialize data */
    .exit_value :
    {
        *( .exit_value )
    } > DTCM


    .data : AT (_sidata)
    {
		. = ALIGN (4);
		_sdata = .;
        PROVIDE ( _sdata = . );
		*( .data )
        *( .data* ) /* data sections */
		. = ALIGN (4);
        _edata = .;
        PROVIDE ( _edata = . );
    } >DTCM



    .bss :
    {
		. = ALIGN (4);
        __bss_start__ = .;
        PROVIDE ( __bss_start__ = . );
		*( .bss )
        *( .bss* )
        *( COMMON )
		. = ALIGN (4);
		__bss_end__ = .;
		PROVIDE ( __bss_end__ = . );
    } >DTCM

	._heap_stack 0x1F000:
	{
		. = ALIGN (4);
		PROVIDE ( _heap_base = . );
		. = . + _Stack_Heap_Limit_Size;
		PROVIDE ( _heap_top = _estack - 2k);

	} >DTCM

	.ARM.attributes 0 : { *( .ARM.attributes ) }

  /* custom sections */
  .mySegment1 0x10000(NOLOAD) : {KEEP(*(.myDataSpecSection))}
  .mySegment3 0x1b000(NOLOAD) : {KEEP(*(.myLogInfoSection))}
  .mySegment4 0xe400(NOLOAD) : {KEEP(*(.myNeuronParamsSection))}
}
