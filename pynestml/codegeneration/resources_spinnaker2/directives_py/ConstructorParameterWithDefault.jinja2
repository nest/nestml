{#
  In general case creates an
  @param variable_symbol variable_symbolSymbol variable_symbol for which the initialization should be done
#}
{%- if tracing %}# generated by {{self._TemplateReference__context.name}}{% endif %}
{%- if variable_symbol.has_declaring_expression() and not variable_symbol.is_kernel() %}


{%-   if variable_symbol.has_vector_parameter() %}
{{ printer.print_vector_declaration(variable_symbol) }},

{%-   else %}
{%-     set variable_initial_value = utils.get_variable_by_name(astnode, variable_symbol.get_initial_value()|string()) %}
{%-     if not variable_initial_value %}
{{ printer.print(variable) }} = {{ printer.print_expression(variable_symbol.get_declaring_expression()) }} , # type: {{variable_symbol.get_type_symbol().print_symbol()}}
{%-     else %}
{%-         set variable_symbol = variable_initial_value.resolve_in_own_scope()%}
{%-         include "directives_py/ConstructorParameterWithDefault.jinja2" %}
{%-     endif %}

{%-   endif %}
{%- else %}
{%-   if variable_symbol.has_vector_parameter() %}
{{ printer.print(variable) }} , # type: {{ variable_symbol.get_type_symbol().print_symbol() }}
{%-   else %}
{{ printer.print(variable) }} , # type: {{ variable_symbol.get_type_symbol().print_symbol() }}
{%-   endif -%}
{%- endif -%}