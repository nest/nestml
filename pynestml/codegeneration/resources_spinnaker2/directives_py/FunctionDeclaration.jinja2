{%- macro FunctionDeclaration(ast_function, namespace_prefix) -%}
{%- with function_symbol = ast_function.get_scope().resolve_to_symbol(ast_function.get_name(), SymbolKind.FUNCTION) -%}
{%-     if function_symbol is none -%}
{{ raise('Cannot resolve the method ' + ast_function.get_name()) }}
{%-     endif %}
{{ ast_function.print_comment('#') }}
def {{ namespace_prefix }}{{ ast_function.get_name() }} (
{%- filter indent(6) %}
{%-     for param in ast_function.get_parameters() %}
{%-         set typeSym = param.get_data_type().get_type_symbol() -%}
{{ types_printer.convert(typeSym) }} {{ param.get_name() }}
{%-         if not loop.last -%}
,
{%-         endif -%}
{%-     endfor -%}
{%-       endfilter -%}
) -> {{ types_printer.print(function_symbol.get_return_type()) }}:
{%- endwith -%}
{%- endmacro -%}
