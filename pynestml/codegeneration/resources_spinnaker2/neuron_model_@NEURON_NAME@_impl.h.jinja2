#ifndef _NEURON_MODEL_{{ neuronName|upper }}_IMPL_H_
#define _NEURON_MODEL_{{ neuronName|upper }}_IMPL_H_

#include "neuron_model.h"
#include "common/neuron-typedefs.h"

typedef struct global_neuron_params_t {
    REAL calc_step_raw; // ode calc timestep
    REAL weight_scaling_factor; // scaling factor for syn weights
} global_neuron_params_t;

// neuron state variables
typedef struct neuron_state_t {
    {%- for statevar in state | sort(attribute="0|int") %}
        REAL {{ statevar }};
    {%- endfor %}
} neuron_state_t;

// neuron parameters from .nestml file and internal parameters
typedef struct neuron_params_t {
    {%- for parameter in neuron.parameter_value_dict | sort(attribute="0|int") %}
        REAL {{ parameter }};
    {%- endfor %}

    {%- for propagator in propagators_as_math_expressions | sort(attribute="0|int") %}
        REAL {{ propagator }};
    {%- endfor %}
} neuron_params_t;

typedef struct neuron_impl_t {
    neuron_state_t state;
    neuron_params_t parameter;
} neuron_impl_t;

#endif // _NEURON_MODEL_{{ neuronName|upper }}_IMPL_H_

