{%- macro ContinuousInputBufferGetter(node, is_in_struct) -%}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
inline {% if node.has_vector_parameter() %}std::vector< {{ type_symbol_printer.print(node.get_type_symbol()) }} >&{%- else %}{{ type_symbol_printer.print(node.get_type_symbol()) }}&{%- endif %} get_{{ node.get_symbol_name() }}() {
{%- if is_in_struct %}
    return {{ node.get_symbol_name() }};
{%- else %}
    return B_.get_{{ node.get_symbol_name() }}();
{%- endif %}
}
{%- endmacro -%}
