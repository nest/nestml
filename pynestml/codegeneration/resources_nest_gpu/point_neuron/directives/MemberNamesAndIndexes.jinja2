{#
  Generates Enums for variable names and indexes
#}
enum ScalVarIndexes {
{%- for variable_symbol in neuron.get_state_symbols_sorted_by_suffix() %}
{%-     set variable = utils.get_state_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  i_{{ printer_no_origin.print(variable) }},
{%- endfor %}
  N_SCAL_VAR
};

enum ScalParamIndexes {
{%- for variable_symbol in neuron.get_parameter_symbols() %}
{%-     set variable = utils.get_parameter_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  i_{{ printer_no_origin.print(variable) }},
{%- endfor %}

{%- for variable_symbol in neuron.get_internal_symbols() %}
{%-     set variable = utils.get_internal_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  i_{{ printer_no_origin.print(variable) }},
{%- endfor %}

{%- for variable_symbol in neuron.get_continuous_input_ports() %}
{%-     set variable = utils.get_input_port_by_name(astnode.get_input_blocks(), variable_symbol.get_symbol_name()) %}
  i_{{ variable.get_name() }},
{%- endfor %}
  N_SCAL_PARAM
};

enum PortVarIndexes {
{%- for variable_symbol in neuron.get_spike_input_ports() %}
{%-     set variable = utils.get_input_port_by_name(astnode.get_input_blocks(), variable_symbol.get_symbol_name()) %}
  i_{{ variable.get_name() }},
{%- endfor %}
  N_PORT_VAR
};

const std::string {{ neuronName }}_scal_var_name[N_SCAL_VAR] = {
{%- for variable_symbol in neuron.get_state_symbols_sorted_by_suffix() %}
{%-     set variable = utils.get_state_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  "{{ printer_no_origin.print(variable) }}",
{%- endfor %}
};

const std::string {{ neuronName }}_scal_param_name[N_SCAL_PARAM] = {
{%- for variable_symbol in neuron.get_parameter_symbols() %}
{%-     set variable = utils.get_parameter_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  "{{ printer_no_origin.print(variable) }}",
{%- endfor %}

{%- for variable_symbol in neuron.get_internal_symbols() %}
{%-     set variable = utils.get_internal_variable_by_name(astnode, variable_symbol.get_symbol_name()) %}
  "{{ printer_no_origin.print(variable) }}",
{%- endfor %}

{%- for variable_symbol in neuron.get_continuous_input_ports() %}
{%-     set variable = utils.get_input_port_by_name(astnode.get_input_blocks(), variable_symbol.get_symbol_name()) %}
  "{{ variable.get_name() }}",
{%- endfor %}
};

const std::string {{neuronName}}_port_var_name[N_PORT_VAR] = {
{%- for variable_symbol in neuron.get_spike_input_ports() %}
{%-     set variable = utils.get_input_port_by_name(astnode.get_input_blocks(), variable_symbol.get_symbol_name()) %}
  "{{ variable.get_name() }}",
{%- endfor %}
};
