"""
NestMLPrinterTest.nestml
########################


Description
+++++++++++

Test whether the NestML printer and beautifier works as intended.


Copyright statement
+++++++++++++++++++

This file is part of NEST.

Copyright (C) 2004 The NEST Initiative

NEST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

NEST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with NEST.  If not, see <http://www.gnu.org/licenses/>.
"""
# model pre
model aeif_cond_alpha_implicit:
    # state pre
    state: # state in
        # state var decl pre
        r integer  # state var decl comment
        # state var decl post

    # eq pre
    equations: # eq in
        # inline pre
        inline V_bounded mV = min(0,1) # inline in
        # inline post

        # ode pre
        V_m'= 1 # ode in
        # ode post

    # parameters pre
    parameters: # parameters in
        # par decl pre
        C_m pF = 281.0pF # par decl in
        # par decl post

    # int pre
    internals: # int in
        # int decl pre
        RefractoryCounts integer = steps(1) # int decl in
        # int decl post

    # input pre
    input:
        # input decl pre
        inh_spikes <- inhibitory spike # input decl in
        # input decl post

    # output pre
    output:
        spike # output in
    # output post

    # update pre
    update: # update in
        # stmt1 pre
        integrate_odes() # stmt1 in
        # stmt1 post

        # stmt2 pre
        if r > 0: # stmt2 in
        # stmt2 post

          # stmt3 pre
          r -= 1 # stmt3 in
          # stmt3 post

        # stmt4 pre
        elif V_m >= V_peak: # stmt4 in

          # stmt5 pre
          r = RefractoryCounts # stmt5 pre
          # stmt5 pre