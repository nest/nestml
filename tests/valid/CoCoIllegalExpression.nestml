"""
CoCoIllegalExpression.nestml
############################


Description
+++++++++++

This model is used to test if broken CoCos are identified correctly. Here, illegal expressions, e.g.
type(lhs)!= type(rhs) are detected.

Positive case.


Copyright statement
+++++++++++++++++++

This file is part of NEST.

Copyright (C) 2004 The NEST Initiative

NEST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

NEST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with NEST.  If not, see <http://www.gnu.org/licenses/>.
"""
model CoCoIllegalExpression:
    state:
        test boolean = True
        test2 mV = 10mV
        test3 integer = 20
        test4 pA = 10pA
    update:
        # condition is bool, thus correct
        test2 = test2 + test2
        # condition is bool, thus correct
        if test2 == test2:
            # condition is bool, thus correct
            print("Inside if")
        elif test2+test2 > 0mV:
            print("Inside elif")

        # condition is bool, thus correct
        while test:
            print("Inside while")

        # from and to are integer typed, thus everything correct
        for i in test3...test3+10 step 10:
           test4 += test4
