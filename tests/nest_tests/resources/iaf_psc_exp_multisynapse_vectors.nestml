"""
iaf_psc_exp_multisynapse - Leaky integrate-and-fire neuron model with multiple ports
####################################################################################

Description
+++++++++++

Used in NESTML unit testing.

For more information about the model, see iaf_psc_exp in the ``models`` directory.

For more information about "multisynapse" models, please refer to the NESTML documentation.
"""
neuron iaf_psc_exp_multisynapse_vectors_neuron:
    state:
        r integer = 0                # counts number of tick during the refractory period
        V_m mV = E_L                 # membrane potential

    equations:
        kernel I_kernel1 = exp(-1/tau_syn1*t)
        kernel I_kernel2 = exp(-1/tau_syn2*t)
        kernel I_kernel3 = -exp(-1/tau_syn3*t)

        inline I_syn pA = convolve(I_kernel1, spikes[1]) - convolve(I_kernel2, spikes[2]) + convolve(I_kernel3, spikes[3])

        V_m' = -(V_m - E_L) / tau_m + (I_syn + I_e + I_stim) / C_m

    parameters:
        C_m      pF = 250pF    # Capacity of the membrane
        tau_m    ms = 10ms     # Membrane time constant.
        tau_syn1 ms = .2ms     # Time constant of synaptic current.
        tau_syn2 ms = 2ms      # Time constant of synaptic current.
        tau_syn3 ms = 20ms     # Time constant of synaptic current.
        t_ref    ms = 2ms      # Refractory period.
        E_L      mV = -70mV    # Resting potential.
        V_reset mV = -70.0 mV  # Reset value of the membrane potential
        V_th   mV = -55.0 mV   # Threshold
        I_e     pA = 0pA       # External current.

    internals:
        # refractory time in steps
        RefractoryCounts integer = steps(t_ref)

    input:
        spikes[3] pA <- spike
        I_stim pA <- continuous

    output:
        spike

    update:
        if r == 0: # neuron not refractory, so evolve V_m
            integrate_odes()
        else:
            r = r - 1 # neuron is absolute refractory

        if V_m >= V_th: # threshold crossing
            r = RefractoryCounts
            V_m = V_reset
            emit_spike()
