"""
iaf_psc_exp_resolution_test
###########################

Description
+++++++++++

Used to test resolution() function.
"""
neuron iaf_psc_exp_resolution_test:

  state:
    r integer = 0                          # counts number of tick during the refractory period
    V_abs mV = 0 mV
    a ms = resolution()
  end

  equations:
    kernel I_kernel_inh = exp(-t/tau_syn_inh)
    kernel I_kernel_exc = exp(-t/tau_syn_exc)
    recordable inline V_m mV = V_abs + E_L # Membrane potential.
    inline I_syn pA = convolve(I_kernel_inh, inh_spikes) + convolve(I_kernel_exc, exc_spikes) + I_e + I_stim
    V_abs' = -V_abs / tau_m + I_syn / C_m
  end

  parameters:
    C_m pF = 250 pF           # Capacitance of the membrane
    tau_m ms = 10 ms          # Membrane time constant
    tau_syn_inh ms = 2 ms     # Time constant of synaptic current
    tau_syn_exc ms = 2 ms     # Time constant of synaptic current
    t_ref ms = 2 ms           # Duration of refractory period
    E_L  mV = -70 mV          # Resting potential
    V_reset mV = -70 mV - E_L # reset value of the membrane potential
    Theta   mV = -55 mV - E_L # Threshold, RELATIVE TO RESTING POTENTIAL (!)
                              # I.e. the real threshold is E_L + Theta

    # constant external input current
    I_e pA = 0 pA
    b ms = resolution()
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
    c ms = resolution()
  end

  input:
    exc_spikes pA <- excitatory spike
    inh_spikes pA <- inhibitory spike
    I_stim pA <- continuous
  end

  output: spike

  update:
    d ms = resolution()
    if r == 0: # neuron not refractory, so evolve V
      integrate_odes()
    else:
      r = r - 1 # neuron is absolute refractory
    end

    if V_abs >= Theta: # threshold crossing
      r = RefractoryCounts
      V_abs = V_reset
      emit_spike()
    end

  end

end
