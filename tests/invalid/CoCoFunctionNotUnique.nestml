"""
CoCoFunctionNotUnique.nestml
############################


Description
+++++++++++

This model is used to test if broken CoCos are identified correctly. Here, if redeclaration of predefined functions
is detected.

Negative case.


Copyright statement
+++++++++++++++++++

This file is part of NEST.

Copyright (C) 2004 The NEST Initiative

NEST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

NEST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with NEST.  If not, see <http://www.gnu.org/licenses/>.
"""
model CoCoFunctionNotUnique:
    function max(Tau_a ms,Tau_b ms) real: # redeclaration should be detected
        test real = 1
        return # missing return type should be detected

    function deltaBoolean(Tau_a ms,Tau_b ms) boolean:
        test string = "bl"
        return test # here wrong type of return should be detected

    function deltaNoReturn(Tau_a ms,Tau_b ms) boolean:
        test real = 1
        if True == True:
            return True
        elif Tau_a == 2:
            test = Tau_a # here no return statement should be detected
        else:
            test = test # here no return statement should be detected
