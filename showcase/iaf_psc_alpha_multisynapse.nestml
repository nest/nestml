/*
Name: iaf_psc_alpha_multisynapse_nestml - Leaky integrate-and-fire neuron model with
                                   multiple ports.

Description:

iaf_psc_alpha_multisynapse is a direct extension of iaf_psc_alpha.
On the postsynapic side, there can be arbitrarily many synaptic
time constants (iaf_psc_alpha has exactly two: tau_syn_ex and tau_syn_in).

This can be reached by specifying separate receptor ports, each for
a different time constant. The port number has to match the respective
"receptor_type" in the connectors.

References:
  [1] Rotter S & Diesmann M (1999) Exact simulation of time-invariant linear
      systems with applications to neuronal modeling. Biologial Cybernetics
      81:381-402.
  [2] Diesmann M, Gewaltig M-O, Rotter S, & Aertsen A (2001) State space
      analysis of synchronous spiking in cortical neural networks.
      Neurocomputing 38-40:565-571.

Sends: SpikeEvent

Receives: SpikeEvent, CurrentEvent, DataLoggingRequest

Author:  Schrader, adapted from iaf_psc_alpha
SeeAlso: iaf_psc_alpha, iaf_psc_delta, iaf_psc_exp, iaf_cond_exp,
iaf_psc_exp_multisynapse
*/
neuron iaf_psc_alpha_multisynapse_neuron:

  state:
    V_abs mV
    function V_m mV = V_abs + E_L # Membrane potential.
  end

  equations:
      shape I_shape = 1 pA * (e/tau_syn) * t * exp(-1/tau_syn*t)
      V_abs' = -1/tau_m * V_abs + 1/C_m * (curr_sum(I_shape, spikes) + I_e + currents)
  end

  parameters:
    receptors integer  = 100 # Number of receptors
    C_m     pF = 250pF          # Capacity of the membrane
    tau_m   ms = 10ms           # Membrane time constant.
    tau_syn ms[receptors] = 2ms # Time constant of synaptic current.
    t_ref   ms = 2ms            # Refractory period.
    E_L     mV = -70mV          # Resting potential.
    function V_reset mV = -70.0mV - E_L # Reset value of the membrane potential
    function V_th   mV = -55.0mV - E_L # Threshold, RELATIVE TO RESTING POTENTIAL(!).
                                    # I.e. the real threshold is (E_L+V_th).
    I_e     pA = 0pA # External current.
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
    r integer                               # counts number of tick during the refractory period
  end

  input:
    spikes[receptors]   <- spike
    currents <- current
  end

  output: spike

  update:
    if r == 0: # not refractory
      integrate_odes()
    else:
      r = r - 1
    end

    if V_abs >= V_th: # threshold crossing
        r = RefractoryCounts
        V_abs = V_reset
        # A supra-threshold membrane potential should never be observable.
        # The reset at the time of threshold crossing enables accurate
        # integration independent of the computation step size, see [2,3] for
        # details.
        emit_spike()
    end

  end
end
