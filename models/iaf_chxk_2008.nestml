/*
Name: iaf_chxk_2008 - Conductance based leaky integrate-and-fire neuron model
                      used in Casti et al 2008.

Description:
iaf_chxk_2008 is an implementation of a spiking neuron using IAF dynamics with
conductance-based synapses [1]. It is modeled after iaf_cond_alpha with the
addition of after hyper-polarization current instead of a membrane potential
reset. Incoming spike events induce a post-synaptic change of conductance
modeled by an alpha function. The alpha function is normalized such that an
event of weight 1.0 results in a peak current of 1 nS at t = tau_syn.

References:
[1] Casti A, Hayot F, Xiao Y, and Kaplan E (2008) A simple model of retina-LGN
transmission. J Comput Neurosci 24:235-252.

Sends: SpikeEvent

Receives: SpikeEvent, CurrentEvent

Author: Heiberg

SeeAlso: iaf_cond_alpha
*/
neuron iaf_chxk_2008_neuron:

  state:
    V_m mV = E_L   ## membrane potential
    G_ahp  nS      ## AHP conductance
    G_ahp' nS/ms   ## AHP conductance
  end

  equations:
    shape g_in = (e/tau_syn_in) * t * exp(-t/tau_syn_in)
    shape g_ex = (e/tau_syn_ex) * t * exp(-t/tau_syn_ex)
    G_ahp'' = (-2/tau_ahp) * G_ahp'-(1/tau_ahp**2) * G_ahp
    G_ahp' = G_ahp'

    function I_syn_exc pA = convolve(g_ex, spikesExc) * ( V_m - E_ex )
    function I_syn_inh pA = convolve(g_in, spikesInh) * ( V_m - E_in )
    function I_ahp pA = G_ahp * ( V_m - E_ahp )
    function I_leak pA = g_L * ( V_m - E_L )

    V_m' = ( -I_leak - I_syn_exc - I_syn_inh - I_ahp + currents + I_e ) / C_m
  end

  parameters:
    V_th mV = -45.0mV        # Threshold Potential
    E_ex mV = 20mV           # Excitatory reversal potential
    E_in mV = -90mV          # Inhibitory reversal potential
    g_L nS = 100nS           # Leak Conductance in nS
    C_m pF = 1000.0pF        # Membrane Capacitance
    E_L mV = -60.0mV         # Leak reversal Potential (aka resting potential) in mV
    tau_syn_ex ms = 1ms      # Synaptic Time Constant Excitatory Synapse in ms
    tau_syn_in ms = 1ms      # Synaptic Time Constant for Inhibitory Synapse in ms
    tau_ahp ms = 0.5ms       # Afterhyperpolarization (AHP) time constant
    g_ahp nS = 443.8nS       # AHP conductance
    E_ahp mV = -95mV         # AHP potential
    ahp_bug boolean = false  # If true, discard AHP conductance value from previous spikes
    I_e pA = 0 pA            # Constant Current in pA

  end

  internals:
    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E nS/ms = nS * e / tau_syn_ex

    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I nS/ms = nS * e / tau_syn_in

    PSConInit_AHP real = g_ahp * e / tau_ahp * (ms/nS)
  end

  input:
      spikesInh nS <- inhibitory spike
      spikesExc nS <- excitatory spike
      currents <- current
  end

  output: spike

  update:

    vm_prev mV = V_m
    integrate_odes()
    if vm_prev < V_th and V_m >= V_th:
      # neuron is not absolute refractory

      # Find precise spike time using linear interpolation
      sigma real = ( V_m - V_th ) * resolution() / ( V_m - vm_prev ) / ms

      alpha real = exp( -sigma / tau_ahp )

      delta_g_ahp real = PSConInit_AHP * sigma * alpha
      delta_dg_ahp real = PSConInit_AHP * alpha

      if ahp_bug == true:
        # Bug in original code ignores AHP conductance from previous spikes
        G_ahp  = delta_g_ahp * nS
        G_ahp' = delta_dg_ahp * nS/ms
      else:
        G_ahp  += delta_g_ahp * nS
        G_ahp' += delta_dg_ahp * nS/ms
      end

      emit_spike()
    end

  end

end


/*
Name: iaf_chxk_2008 - Conductance based leaky integrate-and-fire neuron model
                      used in Casti et al 2008.

Description:
iaf_chxk_2008 is an implementation of a spiking neuron using IAF dynamics with
conductance-based synapses [1]. It is modeled after iaf_cond_alpha with the
addition of after hyper-polarization current instead of a membrane potential
reset. Incoming spike events induce a post-synaptic change of conductance
modeled by an alpha function. The alpha function is normalized such that an
event of weight 1.0 results in a peak current of 1 nS at t = tau_syn.

References:
[1] Casti A, Hayot F, Xiao Y, and Kaplan E (2008) A simple model of retina-LGN
transmission. J Comput Neurosci 24:235-252.

Sends: SpikeEvent

Receives: SpikeEvent, CurrentEvent

Author: Heiberg

SeeAlso: iaf_cond_alpha
*/
neuron iaf_chxk_2008_implicit:

  state:

    V_m mV = E_L   ## membrane potential
    g_in   nS      ## inputs from the inh conductance
    g_in'  nS/ms   ## inputs from the inh conductance
    g_ex   nS      ## inputs from the exc conductance
    g_ex'  nS/ms   ## inputs from the exc conductance
    G_ahp  nS      ## AHP conductance
    G_ahp' nS/ms   ## AHP conductance
  end

  equations:
    g_in'' = (-2/tau_syn_in) * g_in'-(1/tau_syn_in**2) * g_in
    g_in' = g_in'

    ## alpha function for the g_ex
    g_ex'' = (-2/tau_syn_ex) * g_ex'-(1/tau_syn_ex**2) * g_ex
    g_ex' = g_ex'

    G_ahp'' = -G_ahp' / tau_ahp
    G_ahp' = G_ahp' -  G_ahp / tau_ahp

    function I_syn_inh pA = convolve(g_in, spikesInh) * (V_m - E_in)
    function I_syn_exc pA = convolve(g_ex, spikesExc) * (V_m - E_ex)
    function I_ahp pA = G_ahp * ( V_m - E_ahp )
    function I_leak pA = g_L * ( V_m - E_L )

    V_m' = ( -I_leak - I_syn_exc - I_syn_inh - I_ahp + currents + I_e ) / C_m
  end

  parameters:
    V_th mV = -45.0mV        # Threshold Potential
    E_ex mV = 20mV           # Excitatory reversal potential
    E_in mV = -90mV          # Inhibitory reversal potential
    g_L nS = 100nS           # Leak Conductance in nS
    C_m pF = 1000.0pF        # Membrane Capacitance
    E_L mV = -60.0mV         # Leak reversal Potential (aka resting potential) in mV
    tau_syn_ex ms = 1ms      # Synaptic Time Constant Excitatory Synapse in ms
    tau_syn_in ms = 1ms      # Synaptic Time Constant for Inhibitory Synapse in ms
    tau_ahp ms = 0.5ms       # Afterhyperpolarization (AHP) time constant
    g_ahp nS = 443.8nS       # AHP conductance
    E_ahp mV = -95mV         # AHP potential
    ahp_bug boolean = false  # If true, discard AHP conductance value from previous spikes
    I_e pA = 0 pA            # Constant Current in pA

  end

  internals:
    # Impulse to add to DG_EXC on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_E 1/ms = e / tau_syn_ex

    # Impulse to add to DG_INH on spike arrival to evoke unit-amplitude
    # conductance excursion.
    PSConInit_I 1/ms = e / tau_syn_in

    PSConInit_AHP real = g_ahp * e / tau_ahp * (ms/nS)
  end

  input:
      spikesInh nS <- inhibitory spike
      spikesExc nS <- excitatory spike
      currents <- current
  end

  output: spike

  update:

    vm_prev mV = V_m
    integrate_odes()
    if vm_prev < V_th and V_m >= V_th:
      # neuron is not absolute refractory

      # Find precise spike time using linear interpolation
      sigma real = ( V_m - V_th ) * resolution() / ( V_m - vm_prev ) / ms

      alpha real = exp( -sigma / tau_ahp )

      delta_g_ahp real = PSConInit_AHP * sigma * alpha
      delta_dg_ahp real = PSConInit_AHP * alpha

      if ahp_bug == true:
        # Bug in original code ignores AHP conductance from previous spikes
        G_ahp  = delta_g_ahp * nS
        G_ahp' = delta_dg_ahp * nS/ms
      else:
        G_ahp  += delta_g_ahp * nS
        G_ahp' += delta_dg_ahp * nS/ms
      end

      emit_spike()
    end

    g_ex' += spikesExc * PSConInit_E
    g_in' += spikesInh * PSConInit_I
  end

end
