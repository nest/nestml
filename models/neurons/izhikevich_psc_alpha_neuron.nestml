"""
izhikevich_psc_alpha - Detailed Izhikevich neuron model with alpha-kernel post-synaptic current
###############################################################################################

Description
+++++++++++

Implementation of the simple spiking neuron model introduced by Izhikevich [1]_, with membrane potential in (milli)volt
and current-based synapses.

The dynamics are given by:

.. math::

   C_m \frac{dV_m}{dt} = k (V - V_t)(V - V_t) - u + I + I_{syn,ex} + I_{syn,in}
   \frac{dU_m}{dt} = a(b(V_m - E_L) - U_m)

   &\text{if}\;\;\; V_m \geq V_{th}:\\
   &\;\;\;\; V_m \text{ is set to } c
   &\;\;\;\; U_m \text{ is incremented by } d

On each spike arrival, the membrane potential is subject to an alpha-kernel current of the form:

.. math::

  I_syn = I_0 \cdot t \cdot \exp\left(-t/\tau_{syn}\right) / \tau_{syn}

See also
++++++++

izhikevich, iaf_psc_alpha


References
++++++++++

.. [1] Izhikevich, Simple Model of Spiking Neurons, IEEE Transactions on Neural Networks (2003) 14:1569-1572
"""
model izhikevich_psc_alpha_neuron:
    state:
        V_m mV = -65 mV # Membrane potential
        U_m pA = 0 pA   # Membrane potential recovery variable
        refr_t ms = 0 ms    # Refractory period timer

    equations:
        # synapses: alpha functions
        kernel K_syn_inh = (e/tau_syn_inh) * t * exp(-t/tau_syn_inh)
        kernel K_syn_exc = (e/tau_syn_exc) * t * exp(-t/tau_syn_exc)

        inline I_syn_exc pA = convolve(K_syn_exc, exc_spikes) * pA
        inline I_syn_inh pA = convolve(K_syn_inh, inh_spikes) * pA

        V_m' = (k * (V_m - V_r) * (V_m - V_t) - U_m + I_e + I_stim + I_syn_exc - I_syn_inh) / C_m
        U_m' = a * (b * (V_m - V_r) - U_m)
        refr_t' = -1e3 * ms/s    # refractoriness is implemented as an ODE, representing a timer counting back down to zero. XXX: TODO: This should simply read ``refr_t' = -1 / s`` (see https://github.com/nest/nestml/issues/984)

    parameters:
        C_m pF = 200 pF           # Membrane capacitance
        k pF/mV/ms = 8 pF/mV/ms   # Spiking slope
        V_r mV = -65 mV           # Resting potential
        V_t mV = -45 mV           # Threshold potential
        a 1/ms = 0.01 /ms         # Time scale of recovery variable
        b nS = 9 nS               # Sensitivity of recovery variable
        c mV = -65 mV             # After-spike reset value of V_m
        d pA = 60 pA              # After-spike reset value of U_m
        V_peak mV = 0 mV          # Spike detection threshold (reset condition)
        tau_syn_exc ms = 0.2 ms   # Synaptic time constant of excitatory synapse
        tau_syn_inh ms = 2 ms     # Synaptic time constant of inhibitory synapse
        refr_T ms = 2 ms          # Duration of refractory period

        # constant external input current
        I_e pA = 0 pA

    input:
        inh_spikes <- inhibitory spike
        exc_spikes <- excitatory spike
        I_stim pA <- continuous

    output:
        spike

    update:
        if refr_t > 0 ms:
            # neuron is absolute refractory, do not evolve V_m
            integrate_odes(refr_t)
        else:
            # neuron not refractory
            integrate_odes(V_m, U_m)

    onCondition(refr_t <= 0 ms and V_m >= V_peak):
        # threshold crossing
        refr_t = refr_T    # start of the refractory period
        V_m = c
        U_m += d
        emit_spike()
